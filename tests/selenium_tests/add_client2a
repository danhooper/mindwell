from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
import unittest, time, re

class SelAddClient2a(unittest.TestCase):
    def setUp(self):
        self.driver = webdriver.Firefox()
        self.driver.implicitly_wait(30)
        self.base_url = "http://dhoops.gotdns.com:8081/"
        self.verificationErrors = []
    
    def test_sel_add_client2a(self):
        driver = self.driver
        driver.get(self.base_url + "/_ah/login?continue=http%3A//dhoops.gotdns.com%3A8081/")
        # ERROR: Caught exception [Error: locator strategy either id or name must be specified explicitly.]
        driver.find_element_by_link_text("Add Client").click()
        driver.find_element_by_id("id_lastname").clear()
        driver.find_element_by_id("id_lastname").send_keys("test_last_name2a")
        driver.find_element_by_id("id_firstname").clear()
        driver.find_element_by_id("id_firstname").send_keys("test_first_name2a")
        driver.find_element_by_id("id_cellnumber").clear()
        driver.find_element_by_id("id_cellnumber").send_keys("test_cell")
        driver.find_element_by_id("id_homenumber").clear()
        driver.find_element_by_id("id_homenumber").send_keys("test_home")
        driver.find_element_by_id("id_worknumber").clear()
        driver.find_element_by_id("id_worknumber").send_keys("test_work")
        driver.find_element_by_id("id_emailaddress").clear()
        driver.find_element_by_id("id_emailaddress").send_keys("test_email")
        driver.find_element_by_id("id_address").clear()
        driver.find_element_by_id("id_address").send_keys("test_addr")
        driver.find_element_by_id("id_address2").clear()
        driver.find_element_by_id("id_address2").send_keys("test_addr2")
        driver.find_element_by_id("id_city").clear()
        driver.find_element_by_id("id_city").send_keys("test_city")
        driver.find_element_by_id("id_zipcode").clear()
        driver.find_element_by_id("id_zipcode").send_keys("test_zip")
        Select(driver.find_element_by_id("id_dob_month")).select_by_visible_text("January")
        Select(driver.find_element_by_id("id_dob_day")).select_by_visible_text("1")
        Select(driver.find_element_by_id("id_dob_year")).select_by_visible_text("1915")
        driver.find_element_by_id("id_guardians_name").clear()
        driver.find_element_by_id("id_guardians_name").send_keys("test_guardian")
        driver.find_element_by_id("id_guardians_phone_number").clear()
        driver.find_element_by_id("id_guardians_phone_number").send_keys("test_guardian_phone")
        driver.find_element_by_id("id_emergency_contact").clear()
        driver.find_element_by_id("id_emergency_contact").send_keys("test_emerg_cont")
        driver.find_element_by_id("id_emergency_contact_phone_number").clear()
        driver.find_element_by_id("id_emergency_contact_phone_number").send_keys("test_emerg_cont_phone")
        driver.find_element_by_id("id_referrer").clear()
        driver.find_element_by_id("id_referrer").send_keys("test_refer")
        driver.find_element_by_id("id_dsm_code").clear()
        driver.find_element_by_id("id_dsm_code").send_keys("test_dsm")
        driver.find_element_by_css_selector("input[type=submit]").click()
    
    def is_element_present(self, how, what):
        try: self.driver.find_element(by=how, value=what)
        except NoSuchElementException, e: return False
        return True
    
    def tearDown(self):
        self.driver.quit()
        self.assertEqual([], self.verificationErrors)

if __name__ == "__main__":
    unittest.main()
