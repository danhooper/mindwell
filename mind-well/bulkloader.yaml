# Autogenerated bulkloader.yaml file.
# At a minimum address the items marked with TODO:
#  * Fill in connector and connector_options
#  * Review the property_map.
#    - Ensure the 'external_name' matches the name of your CSV column,
#      XML tag, etc.
#    - Check that __key__ property is what you want. Its value will become
#      the key name on import, and on export the value will be the Key
#      object.  If you would like automatic key generation on import and
#      omitting the key on export, you can remove the entire __key__
#      property from the property map.
#appcfg.py upload_data --config_file=bulkloader.yaml --filename=clientinfo.csv --kind=ClientInfo --url http://mind-well.appspot.com/remote_api -e dan.c.hooper@gmail.com
#del clientinfo.csv && appcfg.py download_data --config_file=bulkloader.yaml --filename=clientinfo.csv --kind=ClientInfo --url http://mind-well.appspot.com/remote_api -e dan.c.hooper@gmail.com
#del dos.csv && appcfg.py download_data --config_file=bulkloader.yaml --filename=dos.csv --kind=DOS --url http://mind-well.appspot.com/remote_api -e dan.c.hooper@gmail.com

# If you have module(s) with your model classes, add them here. Also
# change the kind properties to model_class.
python_preamble:
- import: base64
- import: re
- import: google.appengine.ext.bulkload.transform
- import: google.appengine.ext.bulkload.bulkloader_wizard
- import: google.appengine.api.datastore
- import: google.appengine.api.users
- import: my_transform

transformers:

- kind: UserInfo
  connector: csv
  connector_options:
    # TODO: Add connector options here--these are specific to each connector.
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: user_email_address
      external_name: user_email_address

    - property: userid
      external_name: userid


- kind: ClientInfo
  connector: csv 
  connector_options: 
  property_map:
  
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: address2
      external_name: address2

    - property: address
      external_name: address

    - property: cellmessage
      external_name: cellmessage

    - property: cellnumber
      external_name: cellnumber

    - property: city
      external_name: city
      
      
      

    - property: client_status
      external_name: client_status

    - property: create_time
      external_name: create_time
      import_transform: transform.import_date_time('%Y-%m-%dT%H:%M:%S')
      export_transform: transform.export_date_time('%Y-%m-%dT%H:%M:%S')
      
    - property: dob
      external_name: dob
      # Type: Date/Time Stats: 1 properties of this type in this kind.
      import_transform: transform.import_date_time('%Y-%m-%dT%H:%M:%S')
      export_transform: transform.export_date_time('%Y-%m-%dT%H:%M:%S')

    - property: emailaddress
      external_name: emailaddress
      
      
      

    - property: firstname
      external_name: firstname
      
      
      

    - property: homemessage
      external_name: homemessage

    - property: homenumber
      external_name: homenumber
      
      
      

    - property: lastname
      external_name: lastname
      
      
      

    - property: referrer
      external_name: referrer
      
      
      

    - property: state
      external_name: state
      # Type: String Stats: 1 properties of this type in this kind.


    - property: userinfo
      external_name: userinfo
      # Type: User Stats: 2 properties of this type in this kind.
      import_transform: transform.none_if_empty(users.User)  # Assumes email address
      export_transform: my_transform.user_property

    - property: workmessage
      external_name: workmessage

    - property: worknumber
      external_name: worknumber
      
      
      

    - property: zipcode
      external_name: zipcode
      
      
      


- kind: DOSRecurr
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: dos_base
      external_name: dos_base
      export_transform: transform.key_id_or_name_as_string

    - property: dos_recurr_datetime
      external_name: dos_recurr_datetime
      import_transform: transform.import_date_time('%Y-%m-%dT%H:%M:%S')
      export_transform: transform.export_date_time('%Y-%m-%dT%H:%M:%S')

    - property: userinfo
      external_name: userinfo
      import_transform: transform.none_if_empty(users.User)  # Assumes email address
      export_transform: my_transform.user_property


- kind: DOS
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: clientinfo
      external_name: clientinfo
      import_transform: transform.create_foreign_key('ClientInfo')
      export_transform: transform.key_id_or_name_as_string

    - property: dos_datetime
      external_name: dos_datetime
      import_transform: transform.import_date_time('%Y-%m-%dT%H:%M:%S')
      export_transform: transform.export_date_time('%Y-%m-%dT%H:%M:%S')

    - property: dos_duration
      external_name: dos_duration

    - property: dos_repeat
      external_name: dos_repeat

    - property: session_result
      external_name: session_result


    - property: userinfo
      external_name: userinfo
      # Type: User Stats: 2 properties of this type in this kind.
      import_transform: transform.none_if_empty(users.User)  # Assumes email address
      export_transform: my_transform.user_property


